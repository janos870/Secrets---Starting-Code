// const encrypt = require("mongoose-encryption")
// userSchema.plugin(encrypt, { secret: process.env.SECRET, encryptedFields: ["password"]});
// console.log(process.env.API_KEY)
// const md5 = require("md5");
// const bcrypt = require("bcrypt");
// const saltRounds = 10;

  bcrypt.hash(req.body.password, saltRounds, function (err, hash) {
    const newUser = new User({
      email: req.body.username,
      password: hash,
    });
    newUser
      .save()
      .then(function () {
        res.render("secrets");
      })
      .catch(function (err) {
        console.log(err);
      });
  });

  const username = req.body.username;
  const password = req.body.password;

  User.findOne({ email: username })
    .then(function (foundUser) {
      if (foundUser) {
        bcrypt.compare(password, foundUser.password, function (err, result) {
          if (result === true) {
            res.render("secrets");
          }
        });
      }
    })
    .catch(function (err) {
      console.log(err);
    });